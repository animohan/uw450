setwd("C:/projects/uw450")
setwd("C:/projects/uw450/HW3")
cart = read.csv("Sessions.csv", stringsAsFactors = FALSE)
dim(cart)
str(cart)
head(cart)
cart.withinss = vector(length = 5, mode = 'numeric')
for(i in 4:8){
cart.out = kmeans(cart, i, nstart = 20)
cart.withinss = c(cart.withinss, cart.out$tot.withinss)
}
plot(cart.withinss)
cart.withinss
cart.out = kmeans(cart, 4, nstart = 20)
cart.out$tot.withinss
cart.withinss = vector(length = 5, mode = 'numeric')
for(i in 4:8){
cart.out = kmeans(cart, i, nstart = 20)
cart.withinss = c(cart.withinss, cart.out$tot.withinss)
}
plot(cart.withinss)
cart.withinss
cart.withinss = vector(length = 5, mode = 'numeric')
cart.withinss
n = 200
g = 6
set.seed(g)
d <- data.frame(x = unlist(lapply(1:g, function(i) rnorm(n/g, runif(1)*i^2))),
y = unlist(lapply(1:g, function(i) rnorm(n/g, runif(1)*i^2))))
head(d)
nrow(d)
plot(x,y)
plot(d)
mydata = d
apply(mydata,2,var)
sum(apply(mydata,2,var))
(nrow(mydata)-1)*sum(apply(mydata,2,var))
mydata <- d
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
wss
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
wss
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
wss
sum((kmeans(mydata, centers = 2)$withinss)
sum((kmeans(mydata, centers = 2)$withinss)
)
sum((kmeans(mydata, centers = 2))$withinss)
(kmeans(mydata, centers = 2))$tot.withinss
cart.withinss = numeric()
cart.withinss
for(i in 4:8){
cart.out = kmeans(cart, i, nstart = 20)
cart.withinss = c(cart.withinss, cart.out$tot.withinss)
}
plot(cart.withinss)
cart.withinss = rep(NA, 4)
cart.withinss
for(i in 4:8){
cart.out = kmeans(cart, i, nstart = 20)
cart.withinss = c(cart.withinss, cart.out$tot.withinss)
}
plot(cart.withinss)
cart.withinss = rep(NA, 3)
cart.withinss
for(i in 4:8){
cart.out = kmeans(cart, i, nstart = 20)
cart.withinss = c(cart.withinss, cart.out$tot.withinss)
}
plot(cart.withinss)
cart.withinss = rep(NA, 3)
cart.withinss
for(i in 4:12){
cart.out = kmeans(cart, i, nstart = 20)
cart.withinss = c(cart.withinss, cart.out$tot.withinss)
}
plot(cart.withinss)
set.seed(1)
cart.withinss = rep(NA, 3)
cart.withinss
for(i in 4:12){
cart.out = kmeans(cart, i, nstart = 20)
cart.withinss = c(cart.withinss, cart.out$tot.withinss)
}
plot(cart.withinss)
set.seed(1)
cart.withinss = rep(NA, 3)
cart.withinss
for(i in 4:50){
cart.out = kmeans(cart, i, nstart = 20)
cart.withinss = c(cart.withinss, cart.out$tot.withinss)
}
plot(cart.withinss)
res.nb = NbClust(cart, distance = "euclidean", min.nc = 4, max.nc = 50, method = "complete" , index = "gap")
res.nb
res.nb$Best.partition
res.nb$Best.nc
res.nb = NbClust(cart, distance = "euclidean", min.nc = 4, max.nc = 50, method = "complete" , index = "all")
.libPaths("c:\r_packages")
.libPaths
.libPaths()
.libPaths("c:/r_packages")
.libPaths()
install.packages("NbClust")
library("NbClust")
res.nb = NbClust(cart, distance = "euclidean", min.nc = 4, max.nc = 50, method = "complete" , index = "gap")
res.nb
res.nb$Best.partition
res.nb$Best.nc
res.nb = NbClust(cart, distance = "euclidean", min.nc = 2, max.nc = 50, method = "complete" , index = "gap")
res.nb
res.nb$Best.partition
res.nb$Best.nc
set.seed(1)
cart.withinss = rep(NA, 3)
cart.withinss
for(i in 2:50){
cart.out = kmeans(cart, i, nstart = 20)
cart.withinss = c(cart.withinss, cart.out$tot.withinss)
}
plot(cart.withinss)
set.seed(1)
cart.withinss = rep(NA, 3)
cart.withinss
for(i in 2:25){
cart.out = kmeans(cart, i, nstart = 20)
cart.withinss = c(cart.withinss, cart.out$tot.withinss)
}
plot(cart.withinss)
res.nb = NbClust(cart, distance = "euclidean", min.nc = 2, max.nc = 50, method = "complete" , index = "gap")
res.nb
plot(res.nb)
?fviz_nbclust
?fviz_cluster
install.packages("cluster")
?fviz_cluster
library(cluster)
?fviz_cluster
?cluster
library(cluster)
install.packages("factoextra")
library(factoextra)
install.packages("ggrepel")
library(factoextra)
fviz_nbclust(res.nb)
?fviz_nbclust()
fviz_nbclust(cart, kmeans,method = c("silhouette", "wss", "gap_stat"), k.max = 25)
fviz_nbclust(cart, kmeans,method = c("silhouette", "wss", "gap_stat"), k.max = 5)
fviz_nbclust(cart, kmeans, method = c("silhouette", "wss"), k.max = 5)
clust = fviz_nbclust(cart, kmeans, method = c("silhouette", "wss", "gap_stat"), k.max = 5)
fviz_cluster(clust)
cart.out = kmeans(cart, 4, nstart = 20)
fviz_cluster(cart.out)
fviz_cluster(cart.out, cart)
fviz_silhouette(cart.out)
install.packages("fpc")
pamk.best = pamk(cart)
library(fpc)
pamk.best = pamk(cart)
plot(pam(d,pamk.best$nc))
plot(pam(d,pamk.best$nc))
pamk.best$nc
set.seed(1)
cart.withinss = numeric()
for(i in 3:25){
cart.out = kmeans(cart, i, nstart = 20)
cart.withinss = c(cart.withinss, cart.out$tot.withinss)
}
plot(cart.withinss)
set.seed(1)
cart.withinss = numeric()
cart.ssration = numeric()
for(i in 3:25){
cart.out = kmeans(cart, i, nstart = 20)
cart.withinss = c(cart.withinss, cart.out$tot.withinss)
cart.ssratio = c(cart.ssratio, cart.out$betweenss/cart.out$tot.withinss)
}
plot(cart.withinss)
plot(cart.ssratio)
set.seed(1)
cart.withinss = numeric()
cart.ssratio = numeric()
for(i in 3:25){
cart.out = kmeans(cart, i, nstart = 20)
cart.withinss = c(cart.withinss, cart.out$tot.withinss)
cart.ssratio = c(cart.ssratio, cart.out$betweenss/cart.out$tot.withinss)
}
plot(cart.withinss)
plot(cart.ssratio
plot(cart.ssratio)
plot(cart.ssratio)
res.nb = NbClust(cart, distance = "euclidean", min.nc = 2, max.nc = 50, method = "complete" , index = "gap")
res.nb
res.nb = NbClust(cart, distance = "euclidean", min.nc = 3, max.nc = 50, method = "complete" , index = "gap")
res.nb
clust = fviz_nbclust(cart, kmeans, method = c("silhouette", "wss", "gap_stat"), k.max = 5)
fviz_cluster(cart.out, cart)
=
res.nb = NbClust(cart, distance = "euclidean", min.nc = 3, max.nc = 50, method = "complete" , index = "gap")
res.nb
res.nb = NbClust(cart, distance = "euclidean", min.nc = 4, max.nc = 50, method = "complete" , index = "gap")
res.nb
gap_stat <- clusGap(cart, FUN = kmeans, nstart = 25,K.max = 20, B = 50)
plot(gap_stat, frame = FALSE, xlab = "Number of clusters k")
