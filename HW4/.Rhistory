return(runs)
}
y = c(1,1,1,1)
findrunsbook(y,3)
runs2 = function(x,k){
runs = NULL
for(i in (1:n-k+1)){
if(all(x[i],x[i+k-1]) == 1){
runs = c(runs,i)
}
}
return(runs)
}
runs2(c(1,1,1),3)
runs2 = function(x,k){
runs = NULL
n = length(x)
for(i in (1:n-k+1)){
if(all(x[i],x[i+k-1]) == 1){
runs = c(runs,i)
}
}
return(runs)
}
runs2(c(1,1,1),3)
runs2 = function(x,k){
runs = NULL
n = length(x)
for(i in (1:(n-k+1))){
if(all(x[i],x[i+k-1]) == 1){
runs = c(runs,i)
}
}
return(runs)
}
runs2(c(1,1,1),3)
runs2(c(0,1,1,1),3)
runs2(c(0,1,1,1,1),3)
runs2 = function(x,k){
runs = NULL
n = length(x)
for(i in (1:(n-k+1))){
if(all(x[i:(i+k-1)]) == 1){
runs = c(runs,i)
}
}
return(runs)
}
runs2(c(0,1,1,1,1),3)
rain1 = function(x,k){
n = length(x)
pred = rep(NA, length(x)-k)
sum = x[1:k-1]
if(sum>k/2) pred[1] = 1 else pred[1] = 0
for(i in 2:length(x)-k){
sum = sum - a[i-1] + a[i-k+1]
if (sum > k/2) pred[i] = 1 else pred[i] = 0
}
return(pred)
}
o = c(1,1,1,0,0,0,1,1,1)
rains1(o,3)
rain1(o,3)
if(a>5) print(10) else print(20)
if(a>5) {print(10)} else {print(20)}
if(a>5)
{print(10)}
else
{print(20)}
?if
?ifelse
rain1 = function(x,k){
n = length(x)
pred = rep(NA, length(x)-k)
sum = x[1:k-1]
ifelse (sum>k/2, pred[1] = 1,pred[1] = 0)
for(i in 2:length(x)-k){
sum = sum - a[i-1] + a[i-k+1]
ifelse (sum > k/2,pred[i] = 1, pred[i] = 0)
}
return(pred)
}
rain1 = function(x,k){
n = length(x)
pred = rep(NA, length(x)-k)
sum = x[1:k-1]
ifelse (sum>k/2, pred[1] = 1,pred[1] = 0)
for(i in 2:length(x)-k){
sum = sum - a[i-1] + a[i-k+1]
ifelse (sum > k/2,pred[i] = 1, pred[i] = 0)
}
return(pred)
}
pred = rep(NA, length(x)-k)
?rep
pred = rep(NA, (length(x)-k))
pred = rep(NA, n-k)
n = length(x)
pred = rep(NA, n-k)
n = length(x)
n
k =  3
pred = rep(NA, n-k)
rain1 = function(x,k){
n = length(x)
k =  3
pred = rep(NA, n-k)
sum = x[1:k-1]
ifelse (sum>(k/2), pred[1] = 1,pred[1] = 0)
for(i in 2:length(x)-k){
sum = sum - a[i-1] + a[i-k+1]
ifelse (sum > (k/2), pred[i] = 1, pred[i] = 0)
}
return(pred)
}
rain1 = function(x,k){
n = length(x)
k =  3
pred = rep(NA, n-k)
sum = x[1:k-1]
ifelse (sum > k/2, pred[1] = 1,pred[1] = 0)
for(i in 2:length(x)-k){
sum = sum - a[i-1] + a[i-k+1]
ifelse (sum > k/2, pred[i] = 1, pred[i] = 0)
}
return(pred)
}
rain1 = function(x,k){
n = length(x)
k =  3
pred = rep(NA, n-k)
sum = x[1:k-1]
ifelse (sum > k/2, pred[1] = 1,pred[1] = 0)
for(i in 2:length(x)-k){
sum = sum - a[i-1] + a[i-k+1]
}
return(pred)
}
rain1 = function(x,k){
n = length(x)
k =  3
pred = rep(NA, n-k)
sum = x[1:(k-1)]
ifelse (sum > k/2, pred[1] = 1,pred[1] = 0)
for(i in 2:length(x)-k){
sum = sum - a[i-1] + a[i-k+1]
ifelse (sum > k/2, pred[i] = 1, pred[i] = 0)
}
return(pred)
}
rain1 = function(x,k){
n = length(x)
k =  3
pred = rep(NA, n-k)
sum = x[1:(k-1)]
ifelse (sum > k/2, pred[1] = 1,pred[1] = 0)
for(i in 2:(n-k)){
sum = sum - a[i-1] + a[i-k+1]
ifelse (sum > k/2, pred[i] = 1, pred[i] = 0)
}
return(pred)
}
rain1 = function(x,k){
n = length(x)
k =  3
pred = rep(NA, n-k)
sum = x[1:(k-1)]
ifelse (sum > k/2, pred[1] = 1,pred[1] = 0)
for(i in 2:(n-k)){
sum = sum - a[i-1] + a[i-k+1]
ifelse (sum > k/2, pred[i] = 1, pred[i] = 0)
}
return(pred)
}
?ifelse
rain1 = function(x,k) {
n = length(x)
k =  3
pred = rep(NA, n-k)
sum = x[1:(k-1)]
if(sum > k/2){
pred[1] = 1}
else {pred[1] = 0)}
for(i in 2:(n-k)){
sum = sum - a[i-1] + a[i-k+1]
if(sum > k/2){
pred[i] = 1
else{pred[i] = 0)}
}
return(pred)
}
o = c(1,1,1,0,0,0,1,1,1)
rain1(o,3)
a = 5
if(a>5)
{print(10)}
else
{print(20)}
runs2(c(0,1,1,1,1),3)
rain1 = function(x,k) {
n = length(x)
k =  3
pred = rep(NA, n-k)
sum = x[1:(k-1)]
if(sum > k/2){
pred[1] = 1}
else {pred[1] = 0)}
for(i in 2:(n-k)){
sum = sum - a[i-1] + a[i-k+1]
if(sum > k/2){
pred[i] = 1
else{pred[i] = 0)}
}
return(pred)
}
o = c(1,1,1,0,0,0,1,1,1)
rain1(o,3)
a = 5
if(a>5)
{print(10)}
else
{print(20)}
runs2(c(0,1,1,1,1),3)
rain1 = function(x,k) {
n = length(x)
k =  3
pred = rep(NA, n-k)
sum = x[1:(k-1)]
if(sum > k/2){
pred[1] = 1}
else {pred[1] = 0)}
for(i in 2:(n-k)){
sum = sum - a[i-1] + a[i-k+1]
if(sum > k/2){
pred[i] = 1
else{pred[i] = 0)}
}
return(pred)
}
o = c(1,1,1,0,0,0,1,1,1)
rain1(o,3)
rain1 = function(x,k) {
n = length(x)
k =  3
pred = rep(NA, n-k)
sum = x[1:(k-1)]
if(sum > k/2){
pred[1] = 1}
else {pred[1] = 0}
for(i in 2:(n-k)){
sum = sum - a[i-1] + a[i-k+1]
if(sum > k/2){
pred[i] = 1
else{pred[i] = 0}
}
return(pred)
}
o = c(1,1,1,0,0,0,1,1,1)
rain1(o,3)
a = rep(NA,3)
a[1] =1
a
rain1 = function(x,k) {
n = length(x)
k =  3
pred = rep(NA, n-k)
sum = x[1:(k-1)]
if(sum > k/2){
pred[1] = 1}
else {pred[1] = 0}
for(i in 2:(n-k)){
sum = sum - a[i-1] + a[i-k+1]
if(sum > k/2){
pred[i] = 1
else{pred[i] = 0}
}
return(pred)
}
o = c(1,1,1,0,0,0,1,1,1)
rain1(o,3)
setwd("~/projects/r_projects/uw450/HW4")
install.packages("binr")
vid = read.csv("Video_Store.csv")
library(binr)
?bins
bin.age = bins(vid$Age, target.bins = 4, minpts = 4, binct = 4)
bin.age = bins(vid$Age, target.bins = 4, binct = 4)
bin.age = bins(vid$Age, target.bins = 4, minpts = 4)
bin.age
bin.age = bins(vid$Age, minpts = 4)
bin.age = bins(vid$Age, minpts = 4, binct = 4)
str(vid$Age)
summary(vid$Age)
vid$Age
dim(vid$Age)
length(vid$Age)
bin.age = bins(vid$Age, target.bins = 12, minpts = 4, binct = 4)
bin.age = bins(vid$Age, target.bins = 12, minpts = 4)
bin.age
bin.age = bins(vid$Age, target.bins = 20, minpts = 4)
bin.age = bins(vid$Age, target.bins = 20)
bin.age = bins(vid$Age, target.bins = 20, minpts = 1)
bin.age
bin.age = bins(vid$Age, target.bins = 18, minpts = 1)
bin.age
bin.age = bins(vid$Age, target.bins = 18, max.breaks = 4)
bin.age = bins(vid$Age, target.bins = 18, max.breaks = 18)
bin.age
bin.age = bins(vid$Age, target.bins = 15, max.breaks = 18)
bin.age
bin.age = bins(vid$Age, target.bins = 12, max.breaks = 18)
bin.age
binned.age = cut(vid$Age, breaks = c(16,19,21,24,25,30,32,33,35,38,45,47,70), labels = c('15-16','18-19',
'20-21','22-24','25-25','28-30',
'32-33','35-35','36-38','40-45',
'46-47','52-70'))
binned.age
vid$Age
binned.age = cut(vid$Age, breaks = c(0,16,19,21,24,25,30,32,33,35,38,45,47,70), labels = c('15-16','18-19',
'20-21','22-24','25-25','28-30',
'32-33','35-35','36-38','40-45',
'46-47','52-70'))
binned.age = cut(vid$Age, breaks = c(17,19,21,24,25,30,32,33,35,38,45,47,70), labels = c('15-16','18-19',
'20-21','22-24','25-25','28-30',
'32-33','35-35','36-38','40-45',
'46-47','52-70'))
binned.age
video
vid
binned.age = cut(vid$Age, breaks = c(0,19,21,24,25,30,32,33,35,38,45,47,70), labels = c('15-16','18-19',
'20-21','22-24','25-25','28-30',
'32-33','35-35','36-38','40-45',
'46-47','52-70'))
binned.age
vid = data.frame(vid)
vid$binned.age = binned.age
vid
min.max.income = (vid$Income - min(vid$Income))/(max(vid$Income)- min(vid$Income))
vid$min.max.income = min.max.income
vid
max(vid$Income)
min(vid$Income)
?scale
znorm.rental = scale(vid$Rentals, center = TRUE, scale = TRUE)
vid$znorm.rental = znorm.rental
vid
mean(vid$Rentals)
?rep
category.income = rep(NA, length(vid$Income))
category.income[vid$Income>=60000] = "High"
category.income[vid$Income >=25000 & vid$Income<60000] = "Mid"
category.income[vid$Income < 25000] = "Low"
category.income
vid$category.income = category.income
vid
library(binr)
vid = read.csv("Video_Store.csv")
vid = data.frame(vid)
bin.age = bins(vid$Age, target.bins = 12, max.breaks = 18)
bin.age
binned.age = cut(vid$Age, breaks = c(0,19,21,24,25,30,32,33,35,38,45,47,70), labels = c('15-16','18-19',
'20-21','22-24','25-25','28-30',
'32-33','35-35','36-38','40-45',
'46-47','52-70'))
binned.age
vid$binned.age = binned.age
vid
min.max.income = (vid$Income - min(vid$Income))/(max(vid$Income)- min(vid$Income))
vid$min.max.income = min.max.income
vid
znorm.rental = scale(vid$Rentals, center = TRUE, scale = TRUE)
vid$znorm.rental = znorm.rental
vid
category.income = rep(NA, length(vid$Income))
category.income[vid$Income>=60000] = "High"
category.income[vid$Income >=25000 & vid$Income<60000] = "Mid"
category.income[vid$Income < 25000] = "Low"
vid$category.income = category.income
vid
write.csv(vid)
?write.csv
library(binr)
vid = read.csv("Video_Store.csv")
vid = data.frame(vid)
bin.age = bins(vid$Age, target.bins = 12, max.breaks = 18)
bin.age
binned.age = cut(vid$Age, breaks = c(0,19,21,24,25,30,32,33,35,38,45,47,70), labels = c('15-16','18-19',
'20-21','22-24','25-25','28-30',
'32-33','35-35','36-38','40-45',
'46-47','52-70'))
binned.age
vid$binned.age = binned.age
vid
min.max.income = (vid$Income - min(vid$Income))/(max(vid$Income)- min(vid$Income))
vid$min.max.income = min.max.income
vid
znorm.rental = scale(vid$Rentals, center = TRUE, scale = TRUE)
vid$znorm.rental = znorm.rental
vid
category.income = rep(NA, length(vid$Income))
category.income[vid$Income>=60000] = "High"
category.income[vid$Income >=25000 & vid$Income<60000] = "Mid"
category.income[vid$Income < 25000] = "Low"
vid$category.income = category.income
vid
write.csv(vid, file = "Qa-d_Video_Store.csv")
temp = read.csv("Qa-d_Video_Store.csv")
names(temp)
temp
vid = read.csv("Video_Store.csv")
vid = data.frame(vid)
names(vid)
GenderM = rep(0,length(vid$Gender))
GenderM[vid$Gender == "M"] = 1
GenderF = rep(0,length(vid$Gender))
GenderF[vid$Gender == "F"] = 1
IncidentalsNo = rep(0, length(vid$Incidentals))
IncidentalsNo[vid$Incidentals == "No"] = 1
IncidentalsYes = rep(0, length(vid$Incidentals))
IncidentalsYes[vid$Incidentals == "Yes"] = 1
GenreComedy = rep(0, length(vid$Genre))
GenreComedy[vid$Genre == 'Comedy'] = 1
GenreAction = rep(0, length(vid$Genre))
GenreAction[vid$Genre == 'Action'] = 1
GenreDrama = rep(0, length(vid$Genre))
GenreDrama[vid$Genre == 'Drama'] = 1
newvid = data.frame(cbind(vid$Cust.ID, GenderM, GenderF, vid$Income, vid$Age, vid$Rentals, vid$Avg.Per.Visit,
IncidentalsNo, IncidentalsYes, GenreDrama,GenreAction, GenreComedy))
names(newvid)
names(newvid) = c("Cust.ID","GenderM","GenderF","Income","Age","Rentals","Avg.Per.Visit",
"IncidentalsNo","IncidentalsYes","GenreDrama","GenreAction","GenreComedy")
newvid
write.csv(newvid, file = "Part_e_Video_Store.csv")
vid = read.csv("Video_Store.csv")
vid = data.frame(vid)
names(vid)
GenderM = rep(0,length(vid$Gender))
GenderM[vid$Gender == "M"] = 1
GenderF = rep(0,length(vid$Gender))
GenderF[vid$Gender == "F"] = 1
IncidentalsNo = rep(0, length(vid$Incidentals))
IncidentalsNo[vid$Incidentals == "No"] = 1
IncidentalsYes = rep(0, length(vid$Incidentals))
IncidentalsYes[vid$Incidentals == "Yes"] = 1
GenreComedy = rep(0, length(vid$Genre))
GenreComedy[vid$Genre == 'Comedy'] = 1
GenreAction = rep(0, length(vid$Genre))
GenreAction[vid$Genre == 'Action'] = 1
GenreDrama = rep(0, length(vid$Genre))
GenreDrama[vid$Genre == 'Drama'] = 1
newvid = data.frame(cbind(vid$Cust.ID, GenderM, GenderF, vid$Income, vid$Age, vid$Rentals, vid$Avg.Per.Visit,
IncidentalsNo, IncidentalsYes, GenreDrama,GenreAction, GenreComedy))
names(newvid)
names(newvid) = c("Cust.ID","GenderM","GenderF","Income","Age","Rentals","Avg.Per.Visit",
"IncidentalsNo","IncidentalsYes","GenreDrama","GenreAction","GenreComedy")
newvid
write.csv(newvid, file = "Part_e_Video_Store.csv")
library(ellipse)
vidcor = cor( newvid[,c("GenderM","GenderF","Income","Age","Rentals","Avg.Per.Visit",
"IncidentalsNo","IncidentalsYes","GenreDrama","GenreAction","GenreComedy") ], method = "pearson")
library(corrplot)
corrplot(vidcor, method="circle", type='lower')
vidcore
vidcorr
vidcor
newvid
FemaleComedy = xtabs(~ newvid$GenderF + newvid$GenreComedy)
MaleComedy = xtabs(~ newvid$GenderM + newvid$GenreComedy)
GenreComedyCol = rep(NA,2)
GenreComedyCol[1] = FemaleComedy[4]
GenreComedyCol[2] = MaleComedy[4]
FemaleDrama = xtabs(~ newvid$GenderF + newvid$GenreDrama)
MaleDrama = xtabs(~ newvid$GenderM + newvid$GenreDrama)
GenreDramaCol = rep(NA,2)
GenreDramaCol[1] = FemaleDrama[4]
GenreDramaCol[2] = MaleDrama[4]
FemaleAction= xtabs(~ newvid$GenderF + newvid$GenreAction)
MaleAction = xtabs(~ newvid$GenderM + newvid$GenreAction)
GenreActionCol = rep(NA,2)
GenreActionCol[1] = FemaleAction[4]
GenreActionCol[2] = MaleAction[4]
GenderGenre = cbind(GenreComedyCol,GenreActionCol,GenreDramaCol)
row.names(GenderGenre) = c("Female","Male")
GenderGenre
HighIncidentals = vid[vid$Incidentals == "Yes",]
summary(HighIncidentals)
summary(vid)
library(binr)
vid = read.csv("Video_Store.csv")
vid = data.frame(vid)
bin.age = bins(vid$Age, target.bins = 12, max.breaks = 18)
bin.age
binned.age = cut(vid$Age, breaks = c(0,19,21,24,25,30,32,33,35,38,45,47,70), labels = c('15-16','18-19',
'20-21','22-24','25-25','28-30',
'32-33','35-35','36-38','40-45',
'46-47','52-70'))
binned.age
vid$binned.age = binned.age
vid
min.max.income = (vid$Income - min(vid$Income))/(max(vid$Income)- min(vid$Income))
vid$min.max.income = min.max.income
vid
znorm.rental = scale(vid$Rentals, center = TRUE, scale = TRUE)
vid$znorm.rental = znorm.rental
vid
category.income = rep(NA, length(vid$Income))
category.income[vid$Income>=60000] = "High"
category.income[vid$Income >=25000 & vid$Income<60000] = "Mid"
category.income[vid$Income < 25000] = "Low"
vid$category.income = category.income
vid
write.csv(vid, file = "Part_a_d_Video_Store.csv", sep = ',')
